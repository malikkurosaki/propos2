// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                  @id @default(uuid())
  name                  String
  email                 String                  @unique
  password              String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  Company               Company[]
  Outlet                Outlet[]
  Product               Product[]
  DetailCompany         DetailCompany[]
  MRole                 MRole?                  @relation(fields: [mRoleId], references: [id])
  mRoleId               String?
  Employee              Employee[]
  Category              Category[]
  PaymentMethod         PaymentMethod[]
  Bill                  Bill[]
  Device                Device[]
  ProductImage          ProductImage[]
  ProductOutlet         ProductOutlet[]
  PaymentMethodOutlet   PaymentMethodOutlet[]
  Customer              Customer[]
  CustomerCompany       CustomerCompany[]
  Discount              Discount[]
  DefaultPrefByUser     DefaultPrefByUser[]
  DefaultPrefByEmployee DefaultPrefByEmployee[]
  CustomPrice           CustomPrice[]
  // ProductStock          ProductStock[]
  StockHistory          StockHistory[]
  OrderTemList          OrderTemList[]
  OrderTemp             OrderTemp[]
  ProductStock          ProductStock[]
  Favorite              Favorite[]
  DefaultPreference     DefaultPreference[]
  isActive              Boolean                 @default(true)
}

model Company {
  id                    String                  @id @default(uuid())
  idx                   Int?
  name                  String
  User                  User?                   @relation(fields: [userId], references: [id])
  userId                String?
  Outlet                Outlet[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  Customer              Customer[]
  DetailCompany         DetailCompany[]
  Category              Category[]
  Product               Product[]
  PaymentMethod         PaymentMethod[]
  Bill                  Bill[]
  Device                Device[]
  address               String?
  phone                 String?
  email                 String?
  logo                  String?
  logoUrl               String?
  ProductOutlet         ProductOutlet[]
  PaymentMethodOutlet   PaymentMethodOutlet[]
  Employee              Employee[]
  CustomerCompany       CustomerCompany[]
  Discount              Discount[]
  DefaultPrefByUser     DefaultPrefByUser[]
  DefaultPrefByEmployee DefaultPrefByEmployee[]
  CustomPrice           CustomPrice[]
  // ProductStock          ProductStock[]
  StockHistory          StockHistory[]
  OrderTemList          OrderTemList[]
  OrderTemp             OrderTemp[]
  ProductStock          ProductStock[]
  Favorite              Favorite[]
  DefaultPreference     DefaultPreference[]
}

model DetailCompany {
  id              String       @id @default(uuid())
  nameOwner       String
  address         String
  phone           String
  numberEmployees Int
  User            User?        @relation(fields: [userId], references: [id])
  userId          String?
  MJeniUsaha      MJenisUsaha? @relation(fields: [mJenisUsahaId], references: [id])
  mJenisUsahaId   String?
  Company         Company?     @relation(fields: [companyId], references: [id])
  companyId       String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  logo            String?
}

model Device {
  id                String              @id @default(uuid())
  idx               Int?
  deviceId          String              @unique
  name              String
  User              User?               @relation(fields: [userId], references: [id])
  userId            String?
  Outlet            Outlet?             @relation(fields: [outletId], references: [id])
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  outletId          String?
  Company           Company?            @relation(fields: [companyId], references: [id])
  Employee          Employee[]
  companyId         String?
  Bill              Bill[]
  isActive          Boolean?            @default(true)
  DefaultPreference DefaultPreference[]
  DefaultPrefByUser DefaultPrefByUser[]
}

model DefaultPreference {
  // id        String   @id @default(uuid())
  Device    Device?  @relation(fields: [deviceId], references: [id])
  deviceId  String   @id
  User      User?    @relation(fields: [userId], references: [id])
  Company   Company? @relation(fields: [companyId], references: [id])
  Outlet    Outlet?  @relation(fields: [outletId], references: [id])
  userId    String?
  companyId String?
  outletId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Outlet {
  id                    String                  @id @default(uuid())
  idx                   Int?
  name                  String
  User                  User?                   @relation(fields: [userId], references: [id])
  userId                String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  Company               Company?                @relation(fields: [companyId], references: [id])
  companyId             String?
  Product               Product[]
  Employee              Employee[]
  Bill                  Bill[]
  address               String?
  phone                 String?
  email                 String?
  logo                  String?
  logoUrl               String?
  Device                Device[]
  Category              Category[]
  ProductOutlet         ProductOutlet[]
  PaymentMethodOutlet   PaymentMethodOutlet[]
  Discount              Discount[]
  DefaultPrefByUser     DefaultPrefByUser[]
  DefaultPrefByEmployee DefaultPrefByEmployee[]
  OrderTemList          OrderTemList[]
  OrderTemp             OrderTemp[]
  ProductStock          ProductStock[]
  CustomPrice           CustomPrice[]
  isActive              Boolean?                @default(true)
  Favorite              Favorite[]
  DefaultPreference     DefaultPreference[]
}

model Product {
  id                 String               @id @default(uuid())
  idx                Int?
  name               String
  price              Int
  description        String?              @db.LongText
  isCustomPrice      Boolean              @default(false)
  isStock            Boolean              @default(false)
  isImage            Boolean              @default(false)
  User               User?                @relation(fields: [userId], references: [id])
  userId             String?
  Outlet             Outlet?              @relation(fields: [outletId], references: [id])
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  outletId           String?
  Category           Category?            @relation(fields: [categoryId], references: [id])
  categoryId         String?
  Favorite           Favorite[]
  Company            Company?             @relation(fields: [companyId], references: [id])
  companyId          String?
  Order              Order[]
  ProductImage       ProductImage?        @relation(fields: [productImageId], references: [id])
  productImageId     String?
  ProductOutlet      ProductOutlet[]
  Discount           Discount?            @relation(fields: [discountId], references: [id])
  discountId         String?
  ProductCustomPrice ProductCustomPrice[]
  // modal
  costOfCapital      Int?
  sku                String?
  barcodeId          String?
  // satuan gram
  productWeight      Int?
  productDimention   String?
  stock              Int?
  minStock           Int?
  // ProductStock       ProductStock[]
  StockHistory       StockHistory[]
  img                String?
  OrderTemList       OrderTemList[]
  ProductStock       ProductStock[]
  isActive           Boolean?             @default(true)
  isManual           Boolean?             @default(false)
}

model Discount {
  id           String    @id @default(uuid())
  name         String
  des          String?
  isPercentage Boolean   @default(true)
  percentage   Int?
  value        Int?
  min          String?
  max          Int?
  start        DateTime?
  end          DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  User         User?     @relation(fields: [userId], references: [id])
  userId       String?
  Company      Company?  @relation(fields: [companyId], references: [id])
  companyId    String?
  Outlet       Outlet?   @relation(fields: [outletId], references: [id])
  outletId     String?
  Product      Product[]
  Bill         Bill[]
  isActive     Boolean?  @default(true)
}

model ProductCustomPrice {
  id            String       @id @default(uuid())
  Product       Product?     @relation(fields: [productId], references: [id])
  productId     String?
  CustomPrice   CustomPrice? @relation(fields: [customPriceId], references: [id])
  customPriceId String?
  price         Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  isActive      Boolean?     @default(true)
}

model ProductImage {
  id        String    @id @default(uuid())
  name      String
  url       String
  Product   Product[]
  productId String?
  User      User?     @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String?
  isActive  Boolean?  @default(true)
}

model ProductOutlet {
  id        String   @id @default(uuid())
  User      User?    @relation(fields: [userId], references: [id])
  Company   Company? @relation(fields: [companyId], references: [id])
  Product   Product? @relation(fields: [productId], references: [id])
  Outlet    Outlet?  @relation(fields: [outletId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
  companyId String?
  productId String?
  outletId  String?
  isActive  Boolean? @default(true)
}

model ProductStock {
  id        String   @id @default(uuid())
  stock     Int?
  minStock  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  Company   Company? @relation(fields: [companyId], references: [id])
  Outlet    Outlet?  @relation(fields: [outletId], references: [id])
  Product   Product? @relation(fields: [productId], references: [id])
  userId    String?
  companyId String?
  outletId  String?
  productId String?
  isActive  Boolean? @default(true)
}

model StockHistory {
  id        String   @id @default(uuid())
  nameType  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  start     Int?
  end       Int?
  amount    Int?
  User      User?    @relation(fields: [userId], references: [id])
  Company   Company? @relation(fields: [companyId], references: [id])
  userId    String?
  companyId String?
}

model CustomPrice {
  id                 String               @id @default(uuid())
  name               String?
  des                String?
  User               User?                @relation(fields: [userId], references: [id])
  userId             String?
  Company            Company?             @relation(fields: [companyId], references: [id])
  companyId          String?
  Outlte             Outlet?              @relation(fields: [outletId], references: [id])
  ProductCustomPrice ProductCustomPrice[]
  outletId           String?
  isActive           Boolean?             @default(true)
}

model Category {
  id        String    @id @default(uuid())
  idx       Int?
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
  Company   Company?  @relation(fields: [companyId], references: [id])
  User      User?     @relation(fields: [userId], references: [id])
  Outlet    Outlet?   @relation(fields: [outletId], references: [id])
  companyId String?
  userId    String?
  outletId  String?
  isActive  Boolean?  @default(true)
}

model Favorite {
  id        String   @id @default(uuid())
  idx       Int?
  userId    String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
  Company   Company? @relation(fields: [companyId], references: [id])
  Outlet    Outlet?  @relation(fields: [outletId], references: [id])
  companyId String?
  outletId  String?
}

model Bill {
  id         String    @id @default(uuid())
  idx        Int?
  totalQty   Int?
  totalPrice Int?
  User       User?     @relation(fields: [userId], references: [id])
  Company    Company?  @relation(fields: [companyId], references: [id])
  Outlet     Outlet?   @relation(fields: [outletId], references: [id])
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  userId     String?
  companyId  String?
  outletId   String?
  employeeId String?
  Order      Order[]
  Cashier    Cashier?  @relation(fields: [cashierId], references: [id])
  cashierId  String?
  discount   String?
  tax        String?
  payment    Int?
  change     Int?
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  Device     Device?   @relation(fields: [deviceId], references: [id])
  deviceId   String?
  Discount   Discount? @relation(fields: [discountId], references: [id])
  discountId String?
  // @status
  // 1 paid
  // 2 void
  status     Int?      @default(1)
}

model Order {
  id        String   @id @default(uuid())
  idx       Int?
  quantity  Int?
  note      String?
  total     String?
  discount  String?
  tax       String?
  Bill      Bill?    @relation(fields: [billId], references: [id])
  Product   Product? @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId String?
  billId    String?
  number    Int?
}

model OrderHistory {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderTemp {
  id           String         @id @default(uuid())
  name         String
  des          String?
  OrderTemList OrderTemList[]
  User         User?          @relation(fields: [userId], references: [id])
  Company      Company?       @relation(fields: [companyId], references: [id])
  Outlet       Outlet?        @relation(fields: [outletId], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  userId       String?
  companyId    String?
  outletId     String?
}

model OrderTemList {
  id          String     @id @default(uuid())
  User        User?      @relation(fields: [userId], references: [id])
  Company     Company?   @relation(fields: [companyId], references: [id])
  Outlet      Outlet?    @relation(fields: [outletId], references: [id])
  Product     Product?   @relation(fields: [productId], references: [id])
  OrderTemp   OrderTemp? @relation(fields: [orderTempId], references: [id])
  userId      String?
  companyId   String?
  outletId    String?
  productId   String?
  orderTempId String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Customer {
  id              String            @id @default(uuid())
  idx             Int?
  userId          String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Company         Company?          @relation(fields: [companyId], references: [id])
  companyId       String?
  Bill            Bill[]
  User            User?             @relation(fields: [userId], references: [id])
  name            String?
  email           String?
  address         String?
  whatsapp        String?
  phone           String?
  CustomerCompany CustomerCompany[]
  isActive        Boolean?          @default(true)
}

model CustomerCompany {
  id         String    @id @default(uuid())
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  Company    Company?  @relation(fields: [companyId], references: [id])
  companyId  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Employee {
  id                    String                  @id @default(uuid())
  idx                   Int?
  name                  String?
  password              String?
  User                  User?                   @relation(fields: [userId], references: [id])
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  Outlet                Outlet?                 @relation(fields: [outletId], references: [id])
  outletId              String?
  userId                String?
  Bill                  Bill[]
  Cashier               Cashier[]
  Device                Device?                 @relation(fields: [deviceId], references: [id])
  Company               Company?                @relation(fields: [companyId], references: [id])
  deviceId              String?
  companyId             String?
  DefaultPrefByEmployee DefaultPrefByEmployee[]
  isActive              Boolean?                @default(true)
  DefaultPrefByUser     DefaultPrefByUser[]
}

model Cashier {
  id         String    @id @default(uuid())
  idx        Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  isOwner    Boolean   @default(false)
  employeeId String?
  Bill       Bill[]
  isActive   Boolean?  @default(true)
}

model PaymentMethod {
  id          String   @id @default(uuid())
  idx         Int?
  name        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
  Company     Company? @relation(fields: [companyId], references: [id])
  companyId   String?
  isActive    Boolean? @default(true)
}

model PaymentMethodOutlet {
  id          String   @id @default(uuid())
  name        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Outlet      Outlet?  @relation(fields: [outletId], references: [id])
  outletId    String?
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
  Company     Company? @relation(fields: [companyId], references: [id])
  companyId   String?
}

model DefaultPrefByUser {
  id         String    @id @default(uuid())
  token      String    @unique
  User       User?     @relation(fields: [userId], references: [id])
  userId     String
  Company    Company?  @relation(fields: [companyId], references: [id])
  companyId  String?
  Outlet     Outlet?   @relation(fields: [outletId], references: [id])
  outletId   String?
  Device     Device?   @relation(fields: [deviceId], references: [id])
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deviceId   String?
  employeeId String?
}

model DefaultPrefByEmployee {
  User       User?     @relation(fields: [userId], references: [id])
  userId     String    @id
  Company    Company?  @relation(fields: [companyId], references: [id])
  companyId  String?
  Outlet     Outlet?   @relation(fields: [outletId], references: [id])
  outletId   String?
  Employee   Employee? @relation(fields: [employeeId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  employeeId String?
}

//  *** MASTER MODEL ***
model MOrderStatus {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MRole {
  id        String   @id @default(uuid())
  name      String
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MJenisUsaha {
  id            String          @id @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  DetailCompany DetailCompany[]
}

model MKategori {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MKota {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MProvinsi {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MKecamatan {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MPaymentMethod {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
